<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Graphs and Statistics on covid-2019</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <script data-ad-client="ca-pub-7785008722251149" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <link rel="alternate" href="https://progettocovid.000webhostapp.com" hreflang="en" >
    <link rel="alternate" href="https://progettocovid.000webhostapp.com/indexIta.php" hreflang="it" >
    <style>
        @media (max-width: 768px) {

            #paypal,
            #github,
            button.btn {
                margin: auto;
            }
        }

        @media (min-width: 768px) and (max-width: 992px) {

            #github,
            #paypal,
            button.btn {
                margin: auto;
            }
        }
    </style>
</head>

<body>
    <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav w-100">
                <li class="nav-item active">
                    <a class="nav-link" href="" id="home"><i class="fas fa-home"></i>&nbspHome<span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Statistics<span class='caret'></span></a>
                    <ul class="dropdown-menu">
                        <li class="dropdown-item"><a href="#mondiali"><i class="fas fa-globe"></i>&nbspWorld</a></li>
                        <li class="dropdown-item"><a href="#nazionali"><i class="fas fa-flag"></i>&nbspItaly</a></li>
                        <li class="dropdown-item"><a href="#regionali"><i class="fas fa-location-arrow"></i>&nbspItalian regions</a></li>
                        <li class="dropdown-item"><a href="#provinciali"><i class="fas fa-city"></i>&nbspItalian provinces</a></li>
                    </ul>
                </li>
                <li class="nav-item"><input id="input2" name="limitTop" type="number" class="form-control" placeholder="Statistics, default=5"></li>
                <form class="form-inline ml-2 my-2 my-lg-0">
                    <button class="btn btn-outline-primary my-2 my-sm-0" id="form1" type="button">Change</button>
                </form>
                <div class="dropdown-divider"></div>
                <li class="nav-item dropdown">
                    <a id="1" class="nav-link dropdown-toggle" href="#" changed="false" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Graph<span class='caret'></span></a>
                    <ul class="dropdown-menu">
                        <li class="dropdown-item"><a href="#">World</a></li>
                        <li class="dropdown-item"><a href="#">Italy</a></li>
                        <li class="dropdown-item"><a href="#">Italian regions</a></li>
                        <li class="dropdown-item"><a href="#">Italian provinces</a></li>
                        <li class="dropdown-item">Italian municipalities</li>
                    </ul>
                </li>
                <li class="nav-item dropdown dropdown2">
                    <a id="2" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" changed="false">Which Graph<span class='caret'></span></a>
                    <ul class="dropdown-menu menuAutoGenerated">

                    </ul>
                </li>
                <li class="nav-item dropdown dropdown3">
                    <a id="3" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" changed="false">Graph type<span class='caret'></span></a>
                    <ul class="dropdown-menu">
                        <li class="dropdown-item"><a href="#">Blank line chart</a></li>
                        <li class="dropdown-item"><a href="#">Full line chart</a></li>
                        <li class="dropdown-item"><a href="#">Bar chart</a></li>
                        <!-- <li class="dropdown-item"><a href="#">Grafico a radar</a></li>
                        <li class="dropdown-item"><a href="#">Grafico a doughnut</a></li>
                        <li class="dropdown-item"><a href="#">Grafico a torta</a></li>
                        <li class="dropdown-item"><a href="#">Grafico ad area polare</a></li> -->
                    </ul>
                </li>
                <li class="nav-item"><input id="input1" type="text" class="form-control" placeholder="Filter or Filter:NumResults"></li>
                <form class="form-inline ml-2 my-2 my-lg-0">
                    <button class="btn btn-outline-primary my-2 my-sm-0" id="form2" type="button">Draw Graph</button>
                </form>
                <li class="nav-item ml-auto" id="github">
                    <a class="nav-link p-2 text-center" href="https://github.com/mzanrosso/covidGraphics" target="_blank" rel="noopener">
                        <i style="color: #CCC" class="fab fa-github"></i>
                    </a>
                </li>
                <li class="nav-item" id="telegram">
                    <a class="nav-link p-2 text-center" href="https://t.me/SitoCoronavirus" target="_blank" rel="noopener">
                        <i style="color: #CCC" class="fab fa-telegram"></i>
                    </a>
                </li>
                <div class="dropdown-divider"></div>
                <li class="nav-item" id="paypal">
                    <a href="" class="nav-link">
                        <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
                            <div class="input-group">
                                <input type="hidden" name="cmd" value="_s-xclick" />
                                <input type="hidden" name="hosted_button_id" value="HPDFHTWTG7QCE" />
                                <input class="" type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" title="Grazie per il tuo supporto!" alt="Fai una donazione con il pulsante PayPal" />
                                <img alt="" src="https://www.paypal.com/it_IT/i/scr/pixel.gif" width="1" height="1" />
                            </div>
                        </form>
                    </a>
                </li>
            </ul>
        </div>
    </nav>
    <div class="jumbotron jumbotron-fluid p-10">
        <div class="container">
            <h1 class="display-4">Graphs and Statistics on covid-2019</h1>
            <p class="lead">The site for statistics and graphs regarding the new coronavirus</p>
            <br>
            <hr class="my-1">
            <p class="text-center">Clicca qui per vedere la versione italiana del sito</p>
            <p class="lead text-center">
                <a class="btn btn-primary btn-lg" href="https://progettocovid.000webhostapp.com/indexIta.php" role="button">Sito italiano qui</a>
            </p>
            <br>
        </div>
        <?php include("MainStatistiche.php"); ?>
    </div>
    <div class="row justify-content-center">
        <div class="col-10 ">
            <h3 id="titolo" class="text-center p-10 align-middle"></h3>
            <div id="chart-container">
                <canvas id="graphCanvas"></canvas>
            </div>
        </div>
    </div>
    <footer class="page-footer font-small blue pt-4">
        <div class="footer-copyright text-center py-3">
            Created by Marco Zanrosso and Giacomo ColuccelliÂ©
        </div>
    </footer>

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-163125843-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];

        function gtag() {
            dataLayer.push(arguments);
        }
        gtag('js', new Date());

        gtag('config', 'UA-163125843-1');
    </script>
    <script src="https://kit.fontawesome.com/6451ae53a9.js" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script>
        var graph;
        $("document").ready(function() {
            $("li.dropdown2").hide();
            $("li.dropdown3").hide();
        });
        $("a#home").click(function() {
            location.reload();
        });
        $(".dropdown-menu li a").click(function() {
            var selText = $(this).text();
            $(this).parents('.nav-item').find('.dropdown-toggle').html(selText + '<span class="caret"></span>');
            $(this).parents('.nav-item').find('.dropdown-toggle').attr("changed", selText);
            var GraficiMondiali = ["Total Cases", "Total Healed", "Total Deaths"];
            var GraficiNazionali = ["Total Cases", "Total Positives", "Total Positives variation", "New Positives", "Total Healed", "New Healed", "Total Deaths", "New Dead", "Total Swabs", "New Swabs", "Positive on the total", "Healed on the total", "Dead on the total", "Percentages"];
            var GraficiRegionali = ["Total Cases", "Total Positives", "Total Positives variation", "New Positives", "Total Healed", "New Healed", "Total Deaths", "New Dead", "Total Swabs", "New Swabs"];
            var GraficiProvinciali = ["Total Cases"];
            switch (selText) {
                case "World": {
                    $("ul.menuAutoGenerated").html(""); //eseguo il clear del menu
                    $("li.dropdown2 > .dropdown-toggle").html("Which Graph" + '<span class="caret"></span>');
                    for (var elem in GraficiMondiali) {
                        $("ul.menuAutoGenerated").append("<li class='dropdown-item newItem'><a href='#'>" + GraficiMondiali[elem] + "</a></li>");
                        $("li.newItem").on("click", function() {
                            var selText2 = $(this).text();
                            $(this).parents('.nav-item').find('.dropdown-toggle').html(selText2 + '<span class="caret"></span>');
                            $(this).parents('.nav-item').find('.dropdown-toggle').attr("changed", selText2);
                        });
                    }
                };
                break;
            case "Italy": {
                $("ul.menuAutoGenerated").html(""); //eseguo il clear del menu
                $("li.dropdown2 > .dropdown-toggle").html("Which Graph" + '<span class="caret"></span>');
                for (var elem in GraficiNazionali) {
                    $("ul.menuAutoGenerated").append("<li class='dropdown-item newItem'><a href='#'>" + GraficiNazionali[elem] + "</a></li>");
                    $("li.newItem").on("click", function() {
                        var selText3 = $(this).text();
                        $(this).parents('.nav-item').find('.dropdown-toggle').html(selText3 + '<span class="caret"></span>');
                        $(this).parents('.nav-item').find('.dropdown-toggle').attr("changed", selText3);
                    });
                }
            };
            break;
            case "Italian regions": {
                $("ul.menuAutoGenerated").html(""); //eseguo il clear del menu
                $("li.dropdown2 > .dropdown-toggle").html("Which Graph" + '<span class="caret"></span>');
                for (var elem in GraficiRegionali) {
                    $("ul.menuAutoGenerated").append("<li class='dropdown-item newItem'><a href='#'>" + GraficiRegionali[elem] + "</a></li>");
                    $("li.newItem").on("click", function() {
                        var selText4 = $(this).text();
                        $(this).parents('.nav-item').find('.dropdown-toggle').html(selText4 + '<span class="caret"></span>');
                        $(this).parents('.nav-item').find('.dropdown-toggle').attr("changed", selText4);
                    });
                }
            };
            break;
            case "Italian provinces": {
                $("ul.menuAutoGenerated").html(""); //eseguo il clear del menu
                $("li.dropdown2 > .dropdown-toggle").html("Which Graph" + '<span class="caret"></span>');
                for (var elem in GraficiProvinciali) {
                    $("ul.menuAutoGenerated").append("<li class='dropdown-item newItem'><a href='#'>" + GraficiProvinciali[elem] + "</a></li>");
                    $("li.newItem").on("click", function() {
                        var selText5 = $(this).text();
                        $(this).parents('.nav-item').find('.dropdown-toggle').html(selText5 + '<span class="caret"></span>');
                        $(this).parents('.nav-item').find('.dropdown-toggle').attr("changed", selText5);
                    });
                }
            };
            break;

            }
            $("li.dropdown2").show();
            $("li.dropdown3").show();
        });
        $("input#input1").keyup(function(e) {
            if (e.keyCode == 13) {
                $("button#form2").trigger("click");
            }
        });

        $("button#form1").click(function() {
            if (window.location.href.includes("#")) {
                var tmp = window.location.href.split("#")[0];
                if (tmp.includes("?")) {
                    window.location = tmp.split("?")[0] + "?limitTop=" + $("input#input2").val();
                } else {
                    window.location = tmp + "?limitTop=" + $("input#input2").val();
                }
            } else {
                if (window.location.href.includes("?")) {
                    window.location = window.location.href.split("?")[0] + "?limitTop=" + $("input#input2").val();
                } else {
                    window.location = window.location.href + "?limitTop=" + $("input#input2").val();
                }
            }
        });
        $("input#input2").keyup(function(e) {
            //console.log(e.keyCode)
            if (e.keyCode == 13) {
                $("button#form1").trigger("click");
            }
        });

        $("button#form2").click(function() {
            var choose1 = $("#1").attr("changed") != "false" ? $("#1").attr("changed") : "false";
            var choose2 = $("#2").attr("changed") != "false" ? $("#2").attr("changed") : "false";
            var choose3 = $("#3").attr("changed") != "false" ? $("#3").attr("changed") : "false";
            var input = "";
            var maxQueryResult = 1000;
            if ($("#input1").val() != "") {
                if ($("#input1").val().includes(":")) {
                    var tmpSplit = $("#input1").val().split(':');
                    maxQueryResult = parseInt(tmpSplit[1]);
                    if (tmpSplit[0] == "") {
                        input = "err";
                    } else {
                        input = tmpSplit[0];
                    }

                } else {
                    input = $("#input1").val();
                }
            } else {
                input = "err";
            }
            //alert(input);
            //alert("ch1: " + choose1 + " ch2: " + choose2 + " ch3: " + choose3); //check clicked property
            if ((choose1 != "false" && choose2 != "false" && choose3 != "false")) {
                //alert("input:" + input);
                if (graph != undefined) {
                    graph.destroy();
                    //alert("grafico distrutto");
                }
                $("div.jumbotron").remove(); //tolgo le statistiche
                $.ajax({
                    // definisco il tipo della chiamata
                    type: "POST",
                    // specifico la URL della risorsa da contattare
                    url: "assets/php/graph.php",
                    // passo dei dati alla risorsa remota
                    data: {
                        "choose1": choose1,
                        "choose2": choose2,
                        "input": input,
                        "limit": maxQueryResult,
                    },
                    // definisco il formato della risposta
                    dataType: "text",
                    // imposto un'azione per il caso di successo
                    success: function(data) {
                        var agg = 0;
                        var regioni = [
                            "abruzzo",
                            "basilicata",
                            "p.a. bolzano",
                            "calabria",
                            "campania",
                            "emilia romagna",
                            "friuli venezia giulia",
                            "lazio",
                            "liguria",
                            "lombardia",
                            "marche",
                            "molise",
                            "piemonte",
                            "puglia",
                            "sardegna",
                            "sicilia",
                            "toscana",
                            "p.a. trento",
                            "umbria",
                            "valle d'aosta",
                            "veneto"
                        ];
                        var provincesuregioni = {
                            "abruzzo": 5,
                            "basilicata": 3,
                            "p.a. bolzano": 2,
                            "calabria": 6,
                            "campania": 6,
                            "emilia romagna": 10,
                            "friuli venezia giulia": 5,
                            "lazio": 6,
                            "liguria": 5,
                            "lombardia": 13,
                            "marche": 6,
                            "molise": 3,
                            "piemonte": 9,
                            "puglia": 7,
                            "sardegna": 6,
                            "sicilia": 10,
                            "toscana": 11,
                            "p.a. trento": 2,
                            "umbria": 3,
                            "valle d'aosta": 2,
                            "veneto": 8
                        };
                        //formatto l'input
                        var pieces = data;
                        pieces = pieces.split('Â£');
                        data = JSON.parse(pieces[0]);
                        agg = parseInt(pieces[1], 10);

                        console.log(data);
                        console.log("p2:" + agg);
                        var strX = "data";
                        var strY = "";
                        var typeG = "line";
                        var filled = true;
                        var articolo = "il";
                        switch (choose2) {
                            case "Total Cases":
                                strY = "totale_casi";
                                break;
                            case "Total Positives":
                                strY = "totale_positivi";
                                break;
                            case "Total Positives variation":
                                strY = "variazione_totale_positivi";
                                articolo = "la";
                                break;
                            case "New Positives":
                                strY = "nuovi_positivi";
                                articolo = "i";
                                break;
                            case "Total Healed":
                                strY = "dimessi_guariti";
                                break;
                            case "New Healed":
                                strY = "nuovi_dimessi_guariti";
                                articolo = "i";
                                break;
                            case "Total Deaths":
                                strY = "deceduti";
                                break;
                            case "New Dead":
                                strY = "nuovi_deceduti";
                                articolo = "i";
                                break;
                            case "Total Swabs":
                                strY = "tamponi";
                                break;
                            case "New Swabs":
                                strY = "nuovi_tamponi";
                                articolo = "i";
                                break;
                            case "Positive on the total":
                                strY = "positivi_sul_totale";
                                articolo = "i";
                                break;
                            case "Healed on the total":
                                strY = "guariti_sul_totale";
                                articolo = "i";
                                break;
                            case "Dead on the total":
                                strY = "morti_sul_totale";
                                articolo = "i";
                                break;
                            case "Percentages":
                                articolo = "le";
                                break;


                        }
                        switch (choose3) {
                            case "Blank line chart":
                                typeG = "line";
                                filled = false;
                                break;
                            case "Full line chart":
                                typeG = "line";
                                break;
                            case "Bar chart":
                                typeG = "bar";
                                break;
                                // case "Grafico a radar":
                                //     typeG = "radar";
                                //     break;
                                // case "Grafico a doughnut":
                                //     typeG = "doughnut";
                                //     break;
                                // case "Grafico a torta":
                                //     typeG = "pie";
                                //     break;
                                // case "Grafico ad area polare":
                                //     typeG = "polarArea";
                                //     break;
                        }
                        $("h3#titolo").html("<br>" + choose1 + " " + choose2 + "<br><br>");
                        var dict = [];
                        var date = [];
                        var col = "";
                        var cont = 0;
                        //(((choose1 == "World" || choose1 == "Italian regions" || choose1 == "Italian provinces") && input == "err") || (choose1 == "Italian provinces" && jQuery.inArray(input.toLowerCase(), regioni) != -1)) 
                        if (choose1 != "World") {
                            if (choose1 == "Italy" && !Number.isNaN(agg)) {
                                cont = 0;
                                var asseY1 = [];
                                var asseY2 = [];
                                var asseY3 = [];
                                for (var i in data) {
                                    date.push(data[i]["data"]);
                                    asseY1.push(data[i]["positivi_sul_totale"]);
                                    asseY2.push(data[i]["guariti_sul_totale"]);
                                    asseY3.push(data[i]["morti_sul_totale"]);
                                }

                                r = Math.floor(Math.random() * 200);
                                g = Math.floor(Math.random() * 200);
                                b = Math.floor(Math.random() * 200);
                                col = 'rgb(' + r + ', ' + g + ', ' + b + ')';

                                dict.push({
                                    label: "% Positive on the total",
                                    fill: filled,
                                    //backgroundColor: col,
                                    borderColor: col,
                                    hoverBackgroundColor: '#CCCCCC',
                                    hoverBorderColor: '#666666',
                                    data: asseY1,
                                });

                                r = Math.floor(Math.random() * 200);
                                g = Math.floor(Math.random() * 200);
                                b = Math.floor(Math.random() * 200);
                                col = 'rgb(' + r + ', ' + g + ', ' + b + ')';

                                dict.push({
                                    label: "% Healed on the total",
                                    fill: filled,
                                    //backgroundColor: col,
                                    borderColor: col,
                                    hoverBackgroundColor: '#CCCCCC',
                                    hoverBorderColor: '#666666',
                                    data: asseY2,
                                });

                                r = Math.floor(Math.random() * 200);
                                g = Math.floor(Math.random() * 200);
                                b = Math.floor(Math.random() * 200);
                                col = 'rgb(' + r + ', ' + g + ', ' + b + ')';

                                dict.push({
                                    label: "% Dead on the total",
                                    fill: filled,
                                    //backgroundColor: col,
                                    borderColor: col,
                                    hoverBackgroundColor: '#CCCCCC',
                                    hoverBorderColor: '#666666',
                                    data: asseY3,
                                });
                            } else if (!Number.isNaN(agg)) {
                                //console.log("ris:" + jQuery.inArray(input, regioni));
                                var asseY = [];
                                var asseX = [];
                                var bColor = [];
                                cont = 0;
                                for (var i in data) {
                                    cont++;
                                    r = Math.floor(Math.random() * 200);
                                    g = Math.floor(Math.random() * 200);
                                    b = Math.floor(Math.random() * 200);
                                    col = 'rgb(' + r + ', ' + g + ', ' + b + ')';
                                    var lbl = choose1 == "Italian regions" ? data[i]["denominazione_regione"] : data[i]["denominazione_provincia"];
                                    asseY.push(data[i][strY]);
                                    asseX.push(data[i]["data"]);
                                    if (cont % agg == 0) {
                                        dict.push({
                                            label: lbl,
                                            fill: filled,
                                            //backgroundColor: col,
                                            borderColor: col,
                                            hoverBackgroundColor: '#CCCCCC',
                                            hoverBorderColor: '#666666',
                                            data: asseY,
                                        });
                                        asseY = [];
                                        if (cont == agg) {
                                            date = [...asseX];
                                        }
                                    }
                                }
                                chartdata = { //da testare/eliminare
                                    data: {
                                        dataset: dict,
                                        labels: date
                                    },
                                };
                            } else {
                                var asseY = [];
                                var bColor = [];
                                for (var i in data) {
                                    r = Math.floor(Math.random() * 200);
                                    g = Math.floor(Math.random() * 200);
                                    b = Math.floor(Math.random() * 200);
                                    c = 'rgb(' + r + ', ' + g + ', ' + b + ')';
                                    date.push(data[i][strX]);
                                    asseY.push(data[i][strY]);
                                    bColor.push(c);
                                }
                                //console.log(asseY); 
                                dict = [{
                                    label: choose2,
                                    fill: filled,
                                    //backgroundColor: '#49e2ff',
                                    backgroundColor: typeG != "line" && typeG != "radar" && typeG != "bar" ? bColor : '#49e2ff',
                                    //backgroundColor: bColor,
                                    borderColor: '#46d5f1',
                                    hoverBackgroundColor: '#CCCCCC',
                                    hoverBorderColor: '#666666',
                                    data: asseY
                                }];
                            }
                        } else { //uso impostazione date come colonne e non come campo
                            var asseY = [];
                            var asseX = [];
                            var cont = 0;
                            for (var i in data) {
                                var lbl = data[i]["country_region"] + (data[i]["province_state"] != "" ? "(" + data[i]["province_state"] + ")" : "");
                                var d = new Date("02/22/2020"); //imposto la data iniziale
                                //console.log(Object.keys(data[i]).length);
                                for (k = 0; k < Object.keys(data[i]).length - 8; k++) { //dalla 5 colonna copio tutti i dati di tutte le date
                                    var dFormatted = d.getMonth() + "_" + d.getDate() + "_" + d.getFullYear().toString().substr(-2);
                                    while (dFormatted == "2_30_20" || dFormatted == "2_31_20") {
                                        d.setDate(d.getDate() + 1); //date non presenti nel calendario gregoriano
                                        dFormatted = d.getMonth() + "_" + d.getDate() + "_" + d.getFullYear().toString().substr(-2);
                                    }
                                    //console.log("\ndate: "+dFormatted);
                                    asseX.push(dFormatted); //formatto e inserisco la data come da database
                                    asseY.push(data[i][dFormatted]);
                                    d.setDate(d.getDate() + 1); //avanzo di 1 giorno nella data "virtuale"
                                }
                                r = Math.floor(Math.random() * 200);
                                g = Math.floor(Math.random() * 200);
                                b = Math.floor(Math.random() * 200);
                                dict.push({
                                    label: lbl,
                                    fill: filled,
                                    //backgroundColor: col,
                                    borderColor: 'rgb(' + r + ', ' + g + ', ' + b + ')',
                                    hoverBackgroundColor: '#CCCCCC',
                                    hoverBorderColor: '#666666',
                                    data: asseY,
                                });
                                asseY = [];
                                if (cont == 0) {
                                    date = [...asseX];
                                    //console.log(asseX);
                                }
                                asseX = [];
                                cont++;
                            }
                        }

                        var graphTarget = $("#graphCanvas");

                        console.log(dict);
                        console.log(date);
                        graph = new Chart(
                            graphTarget, {
                                responsive: true,
                                type: typeG,
                                data: {
                                    datasets: dict,
                                    labels: date,
                                }
                            });
                        console.log(graph);
                    },
                    // ed una per il caso di fallimento
                    error: function(err) {
                        console.log(err);
                    }
                });
            } else {
                alert("Enter the 3 options in the top menu to create the graph ");
            }
        });
    </script>
</body>

</html>